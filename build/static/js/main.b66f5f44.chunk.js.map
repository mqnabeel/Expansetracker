{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransactions","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","console","log","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAEcA,G,MAAS,WACnB,OACI,mD,qBCJO,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,oBACD,kCACOF,GADP,IAEIG,aAAcH,EAAMG,aAAaC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,KAAOL,EAAOM,aAEzF,IAAK,kBACD,kCACOP,GADP,IAEIG,aAAa,CAACF,EAAOM,SAAT,mBAAqBP,EAAMG,iBAE/C,QACI,OAAOH,ICVbQ,EAAa,CACfL,aAAa,CACT,CAACG,GAAG,EAAEG,KAAK,SAASC,QAAS,IAC7B,CAACJ,GAAG,EAAEG,KAAK,SAASC,OAAQ,KAC5B,CAACJ,GAAG,EAAEG,KAAK,OAAOC,QAAS,IAC3B,CAACJ,GAAG,EAAEG,KAAK,SAASC,QAAS,IAC7B,CAACJ,GAAG,EAAEG,KAAK,UAAUC,QAAS,MAMzBC,EAAgBC,wBAAcJ,GAG9BK,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,SAAa,EACrBC,qBAAWC,EAAWR,GADD,mBACvCR,EADuC,KAChCiB,EADgC,KAqB9C,OAAQ,cAACN,EAAcO,SAAf,CAAwBC,MAAO,CACnChB,aAAaH,EAAMG,aACnBiB,mBAnBJ,SAA4Bd,GACxBW,EAAS,CACLf,KAAM,oBACNK,QAASD,KAiBbe,eAbJ,SAAwBhB,GACpBY,EAAS,CACLf,KAAM,kBACNK,QAAQF,MAOR,SAKPS,KC1CYQ,EAAU,WAAO,IAIpBC,EAHiBC,qBAAWb,GAA3BR,aAEsBsB,KAAI,SAAApB,GAAW,OAAIA,EAAYK,UACtCgB,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACI,qCACI,8CACA,mCAAON,SCPNO,EAAiB,WAAO,IAG3BC,EAFiBP,qBAAWb,GAA3BR,aAEsBsB,KAAI,SAAApB,GAAW,OAAIA,EAAYK,UAEtDsB,EAASD,EAAQ3B,QAAO,SAAAwB,GAAI,OAAIA,EAAO,KAC5CF,QAAO,SAACC,EAAIC,GAAL,OAAeD,EAAOC,IAAO,GACpCC,QAAQ,GAEHI,IACyE,EAA3EF,EAAQ3B,QAAO,SAAAwB,GAAI,OAAIA,EAAO,KAAGF,QAAO,SAACC,EAAMC,GAAP,OAAiBD,EAAOC,IAAO,IACzEC,QAAQ,GAEV,OACI,sBAAKK,UAAU,oBAAf,UACI,gCACI,wCACZ,mBAAG5B,GAAG,cAAc4B,UAAU,aAA9B,SAA4CF,OAEpC,gCACI,yCACA,mBAAG1B,GAAG,cAAc4B,UAAU,cAA9B,SAA6CD,WCtBhDE,EAAc,SAAC,GAAmB,IAAlB9B,EAAiB,EAAjBA,YAClBe,EAAuBI,qBAAWb,GAAlCS,mBAEDgB,EAAO/B,EAAYK,OAAO,EAAG,IAAK,IACxC,OACI,qBAAIwB,UAAW7B,EAAYK,OAAS,EAAI,QAAU,OAAlD,UACUL,EAAYI,KADtB,IAC4B,iCAAO2B,EAAP,IAAcC,KAAKC,IAAIjC,EAAYK,WAD/D,IAC+E,wBAAQ6B,QAAS,kBAAKnB,EAAmBf,EAAYC,KAAK4B,UAAU,aAApE,eAD/E,QCHKM,EAAkB,WAAO,IAC3BrC,EAAgBqB,qBAAWb,GAA3BR,aAIP,OAHAsC,QAAQC,IAAIvC,EAAaG,IAIrB,qCACE,yCACA,oBAAIA,GAAG,OAAO4B,UAAU,OAAxB,SACK/B,EAAasB,KAAI,SAAApB,GAAW,OAC1B,cAAC,EAAD,CAAkCA,YAAaA,GAA7BA,EAAYC,aCblCqC,EAAiB,WAAO,IAAD,EACRC,mBAAS,IADD,mBACzBnC,EADyB,KACnBoC,EADmB,OAELD,mBAAS,GAFJ,mBAEzBlC,EAFyB,KAElBoC,EAFkB,KAIzBzB,EAAkBG,qBAAWb,GAA7BU,eAaP,OACI,qCACE,qDACA,uBAAM0B,SAbK,SAAAC,GACbA,EAAEC,iBACF,IAAMC,EAAgB,CAClB5C,GAAI+B,KAAKc,MAAsB,IAAhBd,KAAKe,UACpB3C,OACAC,QAASA,GAEbW,EAAe6B,IAMb,UACE,sBAAKhB,UAAU,eAAf,UACI,uBAAOmB,QAAQ,OAAf,kBACA,uBAAOnD,KAAK,OACZiB,MAAOV,EAAM6C,SAAU,SAACN,GAAD,OAAMH,EAAQG,EAAEO,OAAOpC,QAC9CqC,YAAY,uBAEhB,sBAAKtB,UAAU,eAAf,UACI,wBAAOmB,QAAQ,SAAf,oBACW,uBADX,4CAIA,uBAAOnD,KAAK,SACZiB,MAAOT,EAAQ4C,SAAU,SAACN,GAAD,OAAMF,EAAUE,EAAEO,OAAOpC,QAClDqC,YAAY,uBAEZ,wBAAQtB,UAAU,MAAlB,oCCZDuB,MAjBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKvB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCZRwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b66f5f44.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport  const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expanse Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) =>{\r\n    switch(action.type) {\r\n        case 'DELTE_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions:[action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState={\r\n    transactions:[\r\n        {id:1,text:'Flower',amount: -20},\r\n        {id:2,text:'Salary',amount: 2000},\r\n        {id:3,text:'Book',amount: -50},\r\n        {id:4,text:'Camera',amount: -10},\r\n        {id:5,text:'Bicycle',amount: -20},\r\n    ]\r\n}\r\n\r\n//create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ( {children}) =>{\r\nconst [state, dispatch]= useReducer(AppReducer,initialState);\r\n\r\n//Actions\r\nfunction deleteTransactions(id){\r\n    dispatch({\r\n        type: 'DELTE_TRANSACTION',\r\n        payload: id\r\n    });\r\n}\r\n\r\nfunction addTransaction(transaction){\r\n    dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload:transaction\r\n\r\n\r\n    });\r\n}\r\n\r\n\r\nreturn (<GlobalContext.Provider value={{\r\n    transactions:state.transactions,\r\n    deleteTransactions,\r\n    addTransaction\r\n}}>\r\n{children}\r\n</GlobalContext.Provider>)\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce ((acc, item)=> (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    \r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts.filter(item => item > 0)\r\n    .reduce((acc,item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc , item )=> (acc += item), 0)*-1\r\n    ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n    <p id=\"money-minus\" className=\"money plus\">{income}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">{expense}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState'\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const{ deleteTransactions } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount<0 ?'-': '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}> \r\n                 {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span> <button onClick={()=> deleteTransactions(transaction.id)} className=\"delete-btn\">x</button> </li>\r\n    )\r\n}\r\n","import React ,{useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nimport {Transaction} from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    console.log(transactions.id);\r\n    \r\n    \r\n    return (\r\n        <>\r\n          <h3>History</h3>\r\n          <ul id=\"list\" className=\"list\">\r\n              {transactions.map(transaction =>(\r\n                 <Transaction key={transaction.id} transaction={transaction}/>\r\n                 \r\n              ))}\r\n           \r\n            </ul>  \r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport{GlobalContext} from '../context/GlobalState';\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount,setAmount] = useState(0);\r\n\r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const newTransaction ={\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <h3>Add new transaction</h3>\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label htmlFor=\"text\">Text</label>\r\n                <input type=\"text\"\r\n                value={text} onChange={(e)=> setText(e.target.value)}\r\n                placeholder=\"Enter Text ....\"/>\r\n            </div>\r\n            <div className=\"from-control\">\r\n                <label htmlFor=\"amount\">\r\n                    Amount <br/>\r\n                    (negative - expense,positive - income)\r\n                </label>\r\n                <input type=\"number\" \r\n                value={amount} onChange={(e)=> setAmount(e.target.value)}\r\n                placeholder=\"Enter Amount...\"/>\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>  \r\n            </form>  \r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport {Header} from './components/Header'\nimport {Balance} from './components/Balance'\nimport {IncomeExpenses} from './components/IncomeExpenses'\nimport {TransactionList} from './components/TransactionList'\nimport {AddTransaction} from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className=\"container\">\n        <Balance/>\n        <IncomeExpenses/>\n        <TransactionList/>\n        <AddTransaction/>\n        \n      \n      \n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}